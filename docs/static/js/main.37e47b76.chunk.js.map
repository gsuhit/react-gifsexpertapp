{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFecthGifs","element","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGO,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,mCCLdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDAE0BC,UAAUH,GAFpC,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAEL,GAIzB,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAMP,EAAIR,IAAMgB,IAAMR,EAAIE,QAC/B,4BAAIF,EAAIE,YCJPO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEJ,CAACpB,IAEGqB,EDfwBM,GAAnBd,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAMpB,OACE,qCACE,oBAAIJ,UAAU,yCAAd,SAAwDhB,IAEtDoB,GAAW,mBAAGJ,UAAU,wCAAb,yBAIb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACmB,GAAD,OACV,cAAC,EAAD,eAAkCA,GAAhBA,EAAQjB,aEctBkB,MAlCf,SAAsBC,GAEpB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAWA,OACE,qCACE,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAEA,6BAGI8C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCvBtBgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.37e47b76.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function AddCategory({ setCategories }) {\r\n  const [inputValue, setinputValue] = useState(''); //Sino es undefined y da error cuando cambia inputValue\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //props.setCategories('CatNew');  => Esto es si recibis desde parametro sin desestructurar props, pero normalemtne se desestrucutra\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue('');\r\n      //console.log('submit hecho');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n//export default AddCategory;","\r\n\r\nexport const getGifs = async ( category ) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=BeQ6U31hvFCX71uqlP5qbx7tELhL9zqp`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GridGifItem = ( img ) => {\r\n\r\n    //console.log(img);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn' >\r\n            <img src={ img.url } alt={ img.title} />\r\n            <p>{img.title}</p>        \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { useFecthGifs } from \"../hooks/useFecthGifs\";\r\nimport { GridGifItem } from \"./GridGifItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n  const {data:images, loading} = useFecthGifs();\r\n\r\n  //console.log(state);\r\n  // console.log(images);\r\n  // console.log(loading);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='card animate__animated animate__fadeIn'>{category}</h3>\r\n      \r\n      { loading && <p className='card animate__animated animate__flash'>Cargando...</p> }\r\n      \r\n     \r\n\r\n      <div className=\"card-grid\">\r\n         \r\n         {images.map((element) => (\r\n           <GridGifItem key={element.id} {...element} />\r\n         ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n//Original sin Custom Hook\r\n//-------------------------\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n// import { GridGifItem } from \"./GridGifItem\";\r\n\r\n// export const GifGrid = ({ category }) => {\r\n//   const [count, setcount] = useState(0);\r\n\r\n//   const [images, setimages] = useState([]);\r\n\r\n//   //Se usa useEffect para que no se repita la llamada a esta funcion por cada evento del click del boton\r\n//   //Asi como esta se ejetuca la funcion solo la primera vez que renderiza\r\n//   useEffect(() => {\r\n//     getGifs( category )\r\n//     .then ( imgs => setimages(imgs));\r\n//   }, [ category ]);  //Si va [] solo una iunica vez hace esto sino cada vez que cambia categoria\r\n\r\n// //   const getGifs = async () => {\r\n// //     const url =\r\n// //       `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=BeQ6U31hvFCX71uqlP5qbx7tELhL9zqp`;\r\n\r\n// //     const resp = await fetch(url);\r\n// //     const { data } = await resp.json();\r\n\r\n// //     const gifs = data.map((img) => {\r\n// //       return {\r\n// //         id: img.id,\r\n// //         title: img.title,\r\n// //         url: img.images?.downsized_medium.url,\r\n// //       };\r\n// //     });\r\n\r\n// //     //console.log(gifs);\r\n// //     setimages(gifs);\r\n// //   };\r\n\r\n//   //getGifs();\r\n\r\n//   return (\r\n//     <>\r\n//       <h3>{category}</h3>\r\n//       <div className=\"card-grid\">\r\n//         {/* <ol>\r\n//             {\r\n//                 images.map( element => {\r\n//                    //return <li key={element.id}>{element.title}</li>;\r\n//                    <GridGifItem img={element} />\r\n                    \r\n//                 })\r\n//             }\r\n//             <li>item</li>\r\n//         </ol> */}\r\n//         {images.map((element) => (\r\n//           <GridGifItem key={element.id} {...element} />\r\n//         ))}\r\n\r\n//         <h4>{count}</h4>\r\n//         <button onClick={() => setcount(count + 1)}></button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n","// Los Hooks por convencion empeizan con use => useEffect, useState, etc.\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs.js\";\r\n\r\nexport const useFecthGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nfunction GifExpertApp(props) {\r\n  //const categories = ['Cat1','Cat2','Cat3'];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //     //setCategories('CatNew'); => No se hace asi porque cambia el arreglo del estado anterior por este solo string\r\n\r\n  //     //setCategories( [...categories, 'CatNew'] ); //MAs facil\r\n\r\n  //     setCategories( cats => [...cats, 'CatNew'] );\r\n  // }\r\n\r\n  //<button onClick={ handleAdd }>Agregar</button>\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          // <li key={category}> {category} </li>\r\n          categories.map( category => (\r\n            <GifGrid\r\n                 key={category}\r\n                 category={category} \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}